#include <iostream>
#include <bits/stdc++.h>
#define ll long long
#define mo 1000000007
using namespace std;
const int maxn=105;
inline ll read()
{
ll x=0,f=1;
char ch=getchar();
while(ch<'0'||ch>'9')
{
if(ch=='-')
f=-1;
ch=getchar();
}
while(ch>='0' && ch<='9')
x=x*10+ch-'0',ch=getchar();
return x*f;
}
int n;
struct ahaha{
    ll a[maxn][maxn];
    ahaha()
    {
        memset(a,0,sizeof a);
    }
    inline void build()//单位阵
    {
        for(int i =1;i<=n;i++) a[i][i]=1;
    }
}a;
ahaha operator*(const ahaha &x,const ahaha &y)
{
    ahaha z;
    for(int k =1;k<=n;++k)
    {
        for(int i =1;i<=n;i++)
        {
            for(int j =1;j<=n;j++)
            {
                z.a[i][j]=(z.a[i][j]+x.a[i][k]*y.a[k][j]%mo)%mo;
            }
        }
    }
    return z;
}
ll k;
inline void init (){
    n=read();
    k=read();
    for(int i =1;i<=n;i++){
        for(int j=1;j<=n;j++)
        a.a[i][j]=read();
    }
}
ahaha q_pow(ahaha a,ll b)
{
    ahaha ans;ans.build();
	while(b>0)  
    {

      //递推快速幂，与普通的递推快速幂无异，但*不能缩写为*=
		if(b&1)ans=ans*a;
		a=a*a;b>>=1;
    }
    return ans;
	
}
int main()
{   init();
	
    ahaha ans=q_pow(a,k);
	for(int i=1;i<=n;putchar('\n'),++i)
		for(int j=1;j<=n;++j)
			printf("%d ",ans.a[i][j]);
	return 0;
}
